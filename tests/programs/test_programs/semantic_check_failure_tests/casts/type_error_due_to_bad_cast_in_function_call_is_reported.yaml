program: |

    fn main() : int {
      let array: int[4] = 0;

      foo(array, array.length, array[2] as byte);
      return 0;
    }

    fn foo(a: int[], b:int, c: int) {

    }

expect_compile_failure: true
expect_stderr: |
  5:37 Type error: Got argument of type 'Byte' when 'Integer' was expected
    foo(array, array.length, array[2] as byte);
                                      ^^
  9:25 Note: Corresponding parameter declared here
  fn foo(a: int[], b:int, c: int) {
                          ^
  5:37 Note: Explicit cast is required to convert 'Byte' to 'Integer'
    foo(array, array.length, array[2] as byte);
                                      ^^
  Terminating compilation due to 1 error